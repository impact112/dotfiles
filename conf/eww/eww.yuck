(defwidget topbar []
  (box :class "barframe"
    (centerbox :orientation "h"
      (lbox)
      (mbox)
      (rbox)
    )))

(defwidget lbox []
  (box :class "lbox"
       :space-evenly false
    (workspaces)
    (currentwindow)))

(defwidget workspaces []
  (box :class "workspaces"
       :space-evenly false
       (for workspace in WORKSPACES
         (button :class "${workspace.windows > 0 ? "occupied" : ""}"
                 :onclick "hyprctl dispatch workspace ${workspace.id}"
                 "${workspace.id}"))))

(defwidget currentwindow []
  (label :class "currentwindowname"
         :halign "left"
         :text "${CURRENT_WINDOW}"))

(defwidget mbox []
  (box (datetime)))

(defwidget rbox []
  (box :orientation "h"
       :halign "end"
    (systray :icon-size 16
             :space-evenly false
             :spacing 0)
    (battery)))

(defwidget battery []
  (box :class "battery"
       :orientation "h"
       :halign "end"
    (label :text "${BATTERY}")
    (image :path "${BATTERY_ICON}")))

(defwidget datetime []
  DATETIME)

(defpoll DATETIME :interval "10s"
  "date '+%b %d %H:%M'")

(defpoll BATTERY :interval "30s"
  "scripts/battery")

(defpoll BATTERY_ICON :interval "2s"
  "scripts/battery --icon")

(deflisten CURRENT_WINDOW :initial " "
  "sh ~/.config/eww/scripts/currentwindow")

(deflisten CURRENT_WORKSPACE :initial "1" "bash ~/.config/eww/scripts/currentworkspace")

(deflisten WORKSPACES :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")

(defwindow topbar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :anchor "top center")
  :stacking "bt"
  :exclusive true
  :focusable false
  (topbar))
